<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.mappers.reservationMapper">
	
	<sql id="search">
		<if test="searchType == 'department'.toString()">
			WHERE department.name LIKE '%${searchContent}%'
		</if>
		<if test="searchType == 'employee'.toString()">
			WHERE employee.name LIKE '%${searchContent}%'
		</if>
		<if test="searchType == 'meetPurpose'.toString()">
			WHERE reservation.meet_purpose LIKE '%${searchContent}%'
		</if>
		<if test="state">
			WHERE reservation.state = #{state}
		</if>
		<if test="meetingRoomId">
			WHERE reservation.meeting_room_id = #{meetingRoomId}
		</if>
	</sql>
	
	<select id="searchReservation" resultType="Reservation">
		<!-- SELECT * FROM reservation 
		WHERE meet_purpose LIKE '%${searchContent}%'
		ORDER BY reservation_id DESC LIMIT #{pageStart}, #{amount} -->
		SELECT reservation.*, meeting_room.name AS meetingRoomName, employee.name AS employeeName, department.name AS departmentName
		FROM reservation 
		JOIN meeting_room ON meeting_room.meeting_room_id = reservation.meeting_room_id
		JOIN employee ON employee.employee_id = reservation.employee_id
		JOIN department ON department.department_id = employee.department_id
		<include refid="search"></include>
		ORDER BY reservation_id DESC 
		LIMIT #{pageStart}, #{amount}
	</select>
	
	<select id="searchReservationCount" resultType="int">
		SELECT COUNT(reservation_id) FROM reservation 
		WHERE meet_purpose LIKE '%${searchContent}%'
	</select>
	
	<select id="selectReservationByMeetAndDate" resultType="Reservation">
		<!-- SELECT * FROM reservation WHERE meeting_room_id = 1 AND start_date LIKE '2019-12-27%' -->
		<!-- SELECT * FROM reservation 
		WHERE meeting_room_id = #{meetingRoomId} AND start_date LIKE '%${startDate}%'
		ORDER BY start_date ASC -->
		SELECT reservation.*, employee.name AS employeeName, department.name AS departmentName
		FROM reservation
		JOIN employee ON employee.employee_id = reservation.employee_id
		JOIN department ON department.department_id = employee.department_id
		WHERE meeting_room_id = #{meetingRoomId} AND start_date LIKE '${startDate}%'
		ORDER BY start_date ASC
	</select>
	
	<insert id="insertReservation" parameterType="Reservation">
		INSERT INTO reservation(employee_id, meeting_room_id, meet_purpose, meet_attendess, start_date, end_date)
		VALUES (#{employeeId},#{meetingRoomId},#{meetPurpose},#{meetAttendess},#{startDate},#{endDate})
	</insert>
	
	<update id="updateReservation" parameterType="Reservation">
		UPDATE reservation 
		SET meeting_room_id = #{meetingRoomId}, meet_purpose = #{meetPurpose}, meet_attendess = #{meetAttendess}, 
		start_date = #{startDate}, end_date = #{endDate}, modify_date = #{modifyDate}
		WHERE reservation_id = 1	
	</update>
	
	<select id="">
		<!-- select * from reservation where start_date >= '2020-01-01' and end_date <= '2020-01-05' -->
		
	</select>
</mapper>