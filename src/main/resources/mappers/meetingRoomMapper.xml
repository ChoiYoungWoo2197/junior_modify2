<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.mappers.meetingRoomMapper">
	
	<!-- 검색하기 위한 용도 -->
	<sql id="search">
		<if test="searchType == 'meetingRoom'.toString()">
			WHERE meeting_room.name LIKE '%${searchContent}%'
		</if>
		<if test="searchType == 'equipment'.toString()">
			WHERE equipment.name LIKE '%${searchContent}%'
		</if>
	</sql>
	
	<select id="searchMeetingRoom" resultType="MeetingRoom">
		SELECT meeting_room.* , GROUP_CONCAT(equipment.name) AS meetingRoomEquipmenet
		FROM meeting_room 
		LEFT JOIN meeting_room_equipment ON meeting_room.meeting_room_id = meeting_room_equipment.meeting_room_id
		LEFT JOIN equipment ON equipment.equipment_id = meeting_room_equipment.equipment_id
		<include refid="search"></include>
		GROUP BY meeting_room_id
		ORDER BY meeting_room_id DESC 
		LIMIT #{pageStart}, #{amount}
	</select>
	
	<select id="searchMeetingRoomCount" resultType="int">
		SELECT COUNT(meeting_room_id) 
		FROM meeting_room 
		WHERE name LIKE '%${searchContent}%'
	</select>
	
	<insert id="insertMeetingRoom" parameterType="MeetingRoom" useGeneratedKeys="true" keyProperty="meetingRoomId">
		INSERT INTO meeting_room(manager_id, name, seats, availability) 
		VALUES (#{managerId},#{name},#{seats},#{availability})
	</insert>
	
	<update id="updateMeetingRoom" parameterType="MeetingRoom">
		UPDATE meeting_room 
		SET manager_id = #{managerId}, name = #{name}, seats = #{seats}, availability = #{availability} 
		WHERE meeting_room_id = #{meetingRoomId}
	</update>
	
	<delete id="deleteMeetingRoom" parameterType="int">
		DELETE FROM meeting_room 
		WHERE meeting_room_id = #{meetingRoomId}
	</delete>
	
	<select id="selectMeetingRoomById" resultType="MeetingRoom">
		SELECT * 
		FROM meeting_room 
		WHERE meeting_room_id = #{meetingRoomId}
	</select>
	
	<select id="selectMeetingRoom" resultType="MeetingRoom">
		SELECT * 
		FROM meeting_room
		WHERE availability = true
	</select>
</mapper>