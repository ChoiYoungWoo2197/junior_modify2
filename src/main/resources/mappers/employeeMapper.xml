<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.mappers.employeeMapper">

	<sql id="search">
		<if test="searchType == 'memberId'.toString()">
			WHERE employee.member_id = ${searchContent}
		</if>
		<if test="searchType == 'name'.toString()">
			WHERE employee.name LIKE '%${searchContent}%'
		</if>
		<if test="searchType == 'department'.toString()">
			WHERE department.name LIKE '%${searchContent}%'
		</if>
		
	</sql>


	<insert id="insertEmployee" parameterType="Employee">
		INSERT INTO employee
		(department_id, name, member_id, password, email, phone, authkey,
		state, authkey_date)
		VALUES (#{departmentId}, #{name}, #{memberId},
		#{password},
		#{email}, #{phone}, #{authkey}, #{state}, now());
	</insert>

	<select id="checkUser" resultType="Employee">
		select *
		from employee
		where
		member_id = #{memberId} and	password = #{password}
	</select>

	<select id="checkEmployeeById" parameterType="String" resultType="Employee">
		select * from employee
		where member_id = #{memberId}
	</select>

	<select id="checkEmployeeByEmail" parameterType="String" resultType="Employee">
		select * from employee
		where email = #{email}
	</select>

	<select id="checkKeyByEmail" resultType="Employee">
		select * from
		employee where email = #{email} and authKey = #{authkey}
	</select>

	<update id="updateStateById">
		UPDATE employee
		SET state = #{state} WHERE member_id =
		#{memberId}
	</update>

	<update id="updateKeyById">
		UPDATE employee
		SET authkey = #{authKey} WHERE
		member_id =
		#{memberId}
	</update>

	<update id="updateKeyDateById" parameterType="String">
		UPDATE employee
		SET
		authkey_date = now()
		WHERE member_id = #{memberId}
	</update>

	<select id="checkStateByMap" resultType="Employee">
		select * from employee
		where
		member_id = #{memberId} and
		state = #{state}
	</select>

	<select id="searchEmployee" resultType="Employee">
		<!-- SELECT * FROM employee <include refid="search"></include> ORDER BY 
			employee_id DESC LIMIT #{pageStart}, #{amount} -->

		SELECT employee.employee_id, department.name AS departmentId,
		employee.name, employee.member_id, employee.password, employee.email,
		employee.phone, employee.authkey, employee.state,
		employee.authkey_date
		FROM employee
		LEFT JOIN department ON department.department_id = employee.department_id
		<include refid="search"></include>
		ORDER BY employee.employee_id DESC
		LIMIT #{pageStart}, #{amount}

	</select>

	<select id="searchEmployeeCount" resultType="int">
		SELECT
		COUNT(employee_id)
		FROM employee
		WHERE name LIKE '%${searchContent}%'
	</select>

	<update id="modify">
		UPDATE employee SET member_id= #{memberId},
		department_id = #{departmentId}, name = #{name}, password =
		#{password}, email = #{email}, phone = #{phone}
		WHERE
		employee_id=#{employeeId}
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM
		employee
		WHERE
		member_id = #{memberId}
	</delete>
	
	<select id="checkEmployeeByEmployeeId" parameterType="String" resultType="Employee">
		select * from employee
		where employee_id = #{employeeId}
	</select>
</mapper>