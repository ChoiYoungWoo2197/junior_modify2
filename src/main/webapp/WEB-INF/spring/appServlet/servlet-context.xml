<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		
	<beans:bean id="authInterceptor" class="kr.or.interceptor.AuthInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<!-- css와 js 안먹히는 이유, 이미지가 액박으로 표시되는 이유 그리고 무한 리다이렉트가 걸리는 이유를 알아야 할듯.. -->
			<!-- 모든경로를 대상으로 잡았기 때문에 외부폴더경로(CSS, JS)를 제외시켜줘야한다. -->
  	 		<mapping path="/**" /> 
 		 	<exclude-mapping path="/" />
		 	<exclude-mapping path="/login/**" />
		 	<exclude-mapping path="/reservation/list" />
		 	<exclude-mapping path="/member/insert" />
 		 	<exclude-mapping path="/**/*.js" /> 
		 	<exclude-mapping path="/**/*.css" /> 
		 	<exclude-mapping path="/resources/images/**" />  

<!--   		 	<mapping path="/management/list" />
			<mapping path="/management/insert" />
			<mapping path="/management/modify" />
			<mapping path="/meetingRoom/list" />
			<mapping path="/meetingRoom/insert" />
			<mapping path="/meetingRoom/read" />
			<mapping path="/meetingRoom/modify" />
			<mapping path="/member/list" />
			<mapping path="/member/read" />
			<mapping path="/member/modify" />
			<mapping path="/reservation/insert" />
			<mapping path="/reservation/modify" />
			<mapping path="/reservationDetail/read" /> -->
		 	
			<beans:ref bean="authInterceptor" />
		</interceptor>
	</interceptors>

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven /> <!-- 애노태이션을 사용한다고 선언 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> <!-- HTML 리소스 디렉토리 정의 -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"> <!-- ViewResolver로 jsp와 name을 매핑 -->
		<!-- 뷰(jsp)의 접두어, 접미어 설정 : 파일명만 작성할 수 있게 세팅 -->
		<beans:property name="prefix" value="/WEB-INF/views/" /> <!-- 접두어(디렉토리) -->
		<beans:property name="suffix" value=".jsp" /> <!-- 접미어(확장자) -->
		<!--뷰(View) 경로를 나타내는 것으로 suffix(.jsp) 가 뒤에 자동으로 붙고 prefix (파일의 앞경로) 도 붙게되어 
			view 경로를 리턴할시 만약 view 만 리턴하게되어도 서블릿이 자동으로 WEB-INF/views/view.jsp 경로로 리턴해 
			준다. -->
	</beans:bean>

	<context:component-scan	base-package="kr.or.controller" /> <!-- 베이스 패키지 하위 모든 어노테이션을 스캔해서 빈으로 등록하겠다는 것 -->
	<context:component-scan	base-package="kr.or.persistence" /> <!-- 베이스 패키지 하위 모든 어노테이션을 스캔해서 빈으로 등록하겠다는 것 -->
	<context:component-scan	base-package="kr.or.interceptor" /> <!-- 베이스 패키지 하위 모든 어노테이션을 스캔해서 빈으로 등록하겠다는 것 -->

</beans:beans>